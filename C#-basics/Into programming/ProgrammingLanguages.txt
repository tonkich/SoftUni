1.Java
Java is a general-purpose computer programming language that is concurrent, class-based, object-oriented, and specifically designed to have as few implementation dependencies as possible.
It is intended to let application developers "write once, run anywhere" (WORA), meaning that compiled Java code can run on all platforms that support Java without the need for recompilation.
Java applications are typically compiled to bytecode that can run on any Java virtual machine (JVM) regardless of computer architecture.
As of 2015, Java is one of the most popular programming languages in use, particularly for client-server web applications, with a reported 9 million developers.
The difference between C# and Java is that you can run Java on may different operating systems without recompiling code while C# can run on operating system that has an installed CLR. If you 
know hat your application will run on Windows, and you have or don't have limited development time, using a good type-safe, powerful language like C# seems to a very excellent decision. 
Anywhere in-between, which most software falls, will require a more difficult analysis.
2.Python
Python is a widely used general-purpose, high-level programming language.
Its design philosophy emphasizes code readability, and its syntax allows programmers to express concepts in fewer lines of code than would be possible in languages such as C++ or Java.
The language provides constructs intended to enable clear programs on both a small and large scale.
Python supports multiple programming paradigms, including object-oriented, imperative and functional programming or procedural styles.
It features a dynamic type system and automatic memory management and has a large and comprehensive standard library.
Compared to C# Python is better in ease of learning, cross platform development, availability of open source libraries.
While C# is winner in: standard library, language features, development process and tools, performance, language evolution speed
Similarities: syntax (Python is better in readability, C# has more consistent syntax), adoption.
3.C++
C++ is a general-purpose programming language. It has imperative, object-oriented and generic programming features, while also providing facilities for low-level memory manipulation.
It is designed with a bias toward system programming and embedded, resource-constrained and large systems, with performance, efficiency and flexibility of use as its design highlights.
C++ has also been found useful in many other contexts, with key strengths being software infrastructure and resource-constrained applications, including desktop applications, servers
(e.g. e-commerce, web search or SQL servers), performance-critical applications (e.g. telephone switches or space probes), and entertainment software.
C++ is a compiled language, with implementations of it available on many platforms and provided by various organizations, including the FSF, LLVM, Microsoft and Intel.
C# is very similar, in that it takes the basic operators and style of C++ but forces programs to be type safe, in that it executes the code in a controlled sandbox called the virtual machine.
As such, all code must be encapsulated inside an object, among other things. C# provides many additions to facilitate interaction with Microsoft's Windows, COM, and Visual Basic. C# is a ECMA
and ISO standard.
4.PHP
PHP is a server-side scripting language created in 1995 and designed for web development but also used as a general-purpose programming language.
As of January 2013, PHP was installed on more than 240 million websites (39% of those sampled) and 2.1 million web servers.
Originally created by Rasmus Lerdorf in 1994, the reference implementation of PHP (powered by the Zend Engine) is now produced by The PHP Group.
While PHP originally stood for Personal Home Page, it now stands for PHP: Hypertext Preprocessor, which is a recursive backronym.
C# is an object-oriented programming language where PHP is not.You can use it to mimic object-oriented practices (as you can any language)
but it is not ingrained into the language itself as C# is.
5.JavaScript
JavaScript, also known as ECMAScript (the untrademarked name used for the standard), is a dynamic programming language.
It is most commonly used as part of web browsers, whose implementations allow client-side scripts to interact with the user, control the browser, communicate asynchronously, and alter the document
content that is displayed. JavaScript is also considered an "assembly language of the web" – a compile target of source-to-source compilers – for making client side web applications,
using other programming languages, supported by all the major browsers without plug-ins. It is also used in server-side network programming with runtime environments such as Node.js,
game development and the creation of desktop and mobile applications.

